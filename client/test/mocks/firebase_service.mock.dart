// Mocks generated by Mockito 5.0.15 from annotations
// in music_room/test/repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:music_room/src/data/model/_user.dart' as _i2;
import 'package:music_room/src/data/model/user_firestore.dart' as _i6;
import 'package:music_room/src/data/service/firebase_service.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeUser_0 extends _i1.Fake implements _i2.User {}

/// A class which mocks [FirebaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseService extends _i1.Mock implements _i3.FirebaseService {
  MockFirebaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String?> signupWithEmailAndPassword(
          String? email, String? password) =>
      (super.noSuchMethod(
          Invocation.method(#signupWithEmailAndPassword, [email, password]),
          returnValue: Future<String?>.value()) as _i4.Future<String?>);
  @override
  _i4.Future<_i5.UserCredential?> signinWithEmailAndPassword(
          String? email, String? password) =>
      (super.noSuchMethod(
              Invocation.method(#signinWithEmailAndPassword, [email, password]),
              returnValue: Future<_i5.UserCredential?>.value())
          as _i4.Future<_i5.UserCredential?>);
  @override
  _i4.Future<bool> createFirestoreUser(
          String? uid, Map<String, dynamic>? data) =>
      (super.noSuchMethod(Invocation.method(#createFirestoreUser, [uid, data]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> updateUserFirestore(
          String? uid, Map<String, dynamic>? data, bool? merge) =>
      (super.noSuchMethod(
          Invocation.method(#updateUserFirestore, [uid, data, merge]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<List<String>> getUserAuthMethodWithEmail(String? email) => (super
          .noSuchMethod(Invocation.method(#getUserAuthMethodWithEmail, [email]),
              returnValue: Future<List<String>>.value(<String>[]))
      as _i4.Future<List<String>>);
  @override
  _i4.Future<bool> reauthenticateWithCredential(
          List<String>? signinMethods,
          String? email,
          String? password,
          String? accessToken,
          String? idToken) =>
      (super.noSuchMethod(
          Invocation.method(#reauthenticateWithCredential,
              [signinMethods, email, password, accessToken, idToken]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> updateUserAuth(String? uid, String? email, String? newEmail,
          String? currentPassword, String? newPassword) =>
      (super.noSuchMethod(
          Invocation.method(#updateUserAuth,
              [uid, email, newEmail, currentPassword, newPassword]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<Map<dynamic, dynamic>?> signWithGoogle() =>
      (super.noSuchMethod(Invocation.method(#signWithGoogle, []),
              returnValue: Future<Map<dynamic, dynamic>?>.value())
          as _i4.Future<Map<dynamic, dynamic>?>);
  @override
  _i4.Future<Map<dynamic, dynamic>?> signWithFacebook() =>
      (super.noSuchMethod(Invocation.method(#signWithFacebook, []),
              returnValue: Future<Map<dynamic, dynamic>?>.value())
          as _i4.Future<Map<dynamic, dynamic>?>);
  @override
  _i4.Future<Map<dynamic, dynamic>?> getFirestoreUserFromPseudo(
          String? pseudo) =>
      (super.noSuchMethod(
              Invocation.method(#getFirestoreUserFromPseudo, [pseudo]),
              returnValue: Future<Map<dynamic, dynamic>?>.value())
          as _i4.Future<Map<dynamic, dynamic>?>);
  @override
  _i4.Future<_i6.UserFirestore?> getFirestoreUserFromId(String? id) =>
      (super.noSuchMethod(Invocation.method(#getFirestoreUserFromId, [id]),
              returnValue: Future<_i6.UserFirestore?>.value())
          as _i4.Future<_i6.UserFirestore?>);
  @override
  _i4.Future<void> sendVerificationEmail() =>
      (super.noSuchMethod(Invocation.method(#sendVerificationEmail, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Stream<_i5.User?> onAuthStateChange() =>
      (super.noSuchMethod(Invocation.method(#onAuthStateChange, []),
          returnValue: Stream<_i5.User?>.empty()) as _i4.Stream<_i5.User?>);
  @override
  _i4.Future<void> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i2.User toUser(_i5.User? firebaseAuthUser) =>
      (super.noSuchMethod(Invocation.method(#toUser, [firebaseAuthUser]),
          returnValue: _FakeUser_0()) as _i2.User);
}
