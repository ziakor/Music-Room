// Mocks generated by Mockito 5.0.15 from annotations
// in music_room/test/home_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:music_room/src/data/model/return_repository.dart' as _i3;
import 'package:music_room/src/data/model/_user.dart' as _i2;
import 'package:music_room/src/data/model/user_firestore.dart' as _i6;
import 'package:music_room/src/data/repository/user_repository.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeUser_0 extends _i1.Fake implements _i2.User {}

class _FakeReturnRepository_1 extends _i1.Fake implements _i3.ReturnRepository {
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i4.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i2.User> get user => (super.noSuchMethod(Invocation.getter(#user),
      returnValue: Stream<_i2.User>.empty()) as _i5.Stream<_i2.User>);
  @override
  _i2.User get currentUser =>
      (super.noSuchMethod(Invocation.getter(#currentUser),
          returnValue: _FakeUser_0()) as _i2.User);
  @override
  _i5.Future<String?> signupWithEmailAndPassword(String? email,
          String? password, String? pseudo, String? gender, DateTime? birth) =>
      (super.noSuchMethod(
          Invocation.method(#signupWithEmailAndPassword,
              [email, password, pseudo, gender, birth]),
          returnValue: Future<String?>.value()) as _i5.Future<String?>);
  @override
  _i5.Future<bool> checkPseudoAvailable(String? pseudo) =>
      (super.noSuchMethod(Invocation.method(#checkPseudoAvailable, [pseudo]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<void> signupWithGoogle() =>
      (super.noSuchMethod(Invocation.method(#signupWithGoogle, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> signupWithFacebook() =>
      (super.noSuchMethod(Invocation.method(#signupWithFacebook, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> signinWithEmailAndPassword(
          String? email, String? password) =>
      (super.noSuchMethod(
          Invocation.method(#signinWithEmailAndPassword, [email, password]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> resendEmailVerificationAccount() => (super.noSuchMethod(
      Invocation.method(#resendEmailVerificationAccount, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> resetPasswordCode(String? email) =>
      (super.noSuchMethod(Invocation.method(#resetPasswordCode, [email]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> resetPassword(
          String? email, String? password, String? code) =>
      (super.noSuchMethod(
          Invocation.method(#resetPassword, [email, password, code]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> logoutUser() =>
      (super.noSuchMethod(Invocation.method(#logoutUser, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<_i6.UserFirestore?> getFirestoreUserDataFromId(String? id) =>
      (super.noSuchMethod(Invocation.method(#getFirestoreUserDataFromId, [id]),
              returnValue: Future<_i6.UserFirestore?>.value())
          as _i5.Future<_i6.UserFirestore?>);
  @override
  _i5.Future<_i3.ReturnRepository> updateUser(
          {String? pseudo,
          String? email,
          String? bio,
          String? password,
          String? currentPassword,
          DateTime? birth,
          List<String>? musicalInterests,
          String? gender}) =>
      (super.noSuchMethod(
              Invocation.method(#updateUser, [], {
                #pseudo: pseudo,
                #email: email,
                #bio: bio,
                #password: password,
                #currentPassword: currentPassword,
                #birth: birth,
                #musicalInterests: musicalInterests,
                #gender: gender
              }),
              returnValue:
                  Future<_i3.ReturnRepository>.value(_FakeReturnRepository_1()))
          as _i5.Future<_i3.ReturnRepository>);
}
